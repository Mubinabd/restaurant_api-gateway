basePath: /
definitions:
  genproto.CreateRestaurantReq:
    properties:
      Address:
        type: string
      Description:
        type: string
      Id:
        type: string
      Name:
        type: string
      PhoneNumber:
        type: string
    type: object
  genproto.Menu:
    properties:
      Description:
        type: string
      Id:
        type: string
      Name:
        type: string
      Price:
        type: number
      RestaurantId:
        type: string
    type: object
  genproto.Order:
    properties:
      Id:
        type: string
      MenuItemId:
        type: string
      Quantity:
        type: integer
      ReservationId:
        type: string
    type: object
  genproto.Orders:
    properties:
      Orders:
        items:
          $ref: '#/definitions/genproto.Order'
        type: array
    type: object
  genproto.Payment:
    properties:
      Amount:
        type: number
      Id:
        type: string
      PaymentMethod:
        type: string
      PaymentStatus:
        type: string
      ReservationId:
        type: string
    type: object
  genproto.PaymentCreate:
    properties:
      Amount:
        type: number
      Id:
        type: string
      PaymentMethod:
        type: string
      ReservationId:
        type: string
    type: object
  genproto.Reservation:
    properties:
      ReservationTime:
        type: string
      RestaurantId:
        type: string
      Status:
        type: string
      User_id:
        type: string
    type: object
  genproto.ReservationCreate:
    properties:
      Id:
        type: string
      ReservationTime:
        type: string
      RestaurantId:
        type: string
      Status:
        type: string
      User_id:
        type: string
    type: object
  genproto.ReservationOrder:
    properties:
      MenuItemId:
        type: string
      Quantity:
        type: integer
    type: object
  genproto.ReservationPayment:
    properties:
      Amount:
        type: number
      PaymentMethod:
        type: string
    type: object
  genproto.ResrvationTime:
    properties:
      ReservationTime:
        type: string
      RestaurantId:
        type: string
    type: object
  genproto.Restaurant:
    properties:
      Address:
        type: string
      Description:
        type: string
      Name:
        type: string
      PhoneNumber:
        type: string
    type: object
  genproto.Restaurants:
    properties:
      Restaurants:
        items:
          $ref: '#/definitions/genproto.Restaurant'
        type: array
    type: object
  genproto.Total:
    properties:
      Total:
        type: number
    type: object
  genproto.Void:
    type: object
info:
  contact: {}
  title: Online Voting System Swagger UI
paths:
  /admin/menu/{id}:
    delete:
      consumes:
      - application/json
      description: This api DELETES menu by id
      parameters:
      - description: MENU ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: menu deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: DELETES Menu
      tags:
      - MENU
  /admin/menu/create:
    post:
      consumes:
      - application/json
      description: This api create menu
      parameters:
      - description: Menu
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/genproto.Menu'
      produces:
      - application/json
      responses:
        "201":
          description: menu created successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Menu
      tags:
      - MENU
  /admin/menu/update:
    put:
      consumes:
      - application/json
      description: This api UPDATES menu
      parameters:
      - description: MENU
        in: body
        name: reservation
        required: true
        schema:
          $ref: '#/definitions/genproto.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: menu updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: UPDATES MENU
      tags:
      - MENU
  /admin/reservation/{id}:
    delete:
      consumes:
      - application/json
      description: This api DELETES reservation by id
      parameters:
      - description: RESERVATION ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: reservation deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: DELETES RESERVATION
      tags:
      - RESERVATION
    put:
      consumes:
      - application/json
      description: This api UPDATES reservation by id
      parameters:
      - description: Reservation ID
        in: path
        name: id
        required: true
        type: string
      - description: RESERVATION
        in: body
        name: reservation
        required: true
        schema:
          $ref: '#/definitions/genproto.Reservation'
      produces:
      - application/json
      responses:
        "200":
          description: reservation updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: UPDATES RESERVATION
      tags:
      - RESERVATION
  /admin/restaurant/{id}:
    delete:
      consumes:
      - application/json
      description: This api logs  restaurant in
      parameters:
      - description: RESTAURANT ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Restaurant
      tags:
      - RESTAURANT
    put:
      consumes:
      - application/json
      description: This api logs  restaurant in
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: string
      - description: 'Restaurant '
        in: body
        name: restaurant
        required: true
        schema:
          $ref: '#/definitions/genproto.Restaurant'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Restaurant
      tags:
      - RESTAURANT
  /admin/restaurant/create:
    post:
      consumes:
      - application/json
      description: This api create restaurant
      parameters:
      - description: CreateRestaurantReq
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/genproto.CreateRestaurantReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Restaurant
      tags:
      - RESTAURANT
  /menu/{id}:
    get:
      consumes:
      - application/json
      description: This api GETS menu by id
      parameters:
      - description: MENU ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/genproto.Menu'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET MENU
      tags:
      - MENU
  /menu/all:
    get:
      consumes:
      - application/json
      description: This api GETS ALL menus by id
      parameters:
      - description: RESTAURANT ID
        in: query
        name: rest_id
        type: string
      - description: PriceFrom
        in: query
        name: price_from
        type: string
      - description: PriceTo
        in: query
        name: price_to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/genproto.Reservation'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GETS ALL MENUS
      tags:
      - MENU
  /order/{id}:
    delete:
      consumes:
      - application/json
      description: This api logs order in
      parameters:
      - description: ORDER ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Order
      tags:
      - ORDER
    get:
      consumes:
      - application/json
      description: This api GETS order by id
      parameters:
      - description: ORDER ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/genproto.Order'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET ORDER
      tags:
      - ORDER
    put:
      consumes:
      - application/json
      description: This api logs order in
      parameters:
      - description: ById
        in: path
        name: id
        required: true
        type: string
      - description: Menu Item ID
        in: query
        name: menu_item_id
        type: string
      - description: Reservation ID
        in: query
        name: reservation_id
        type: string
      - description: Quantity
        in: query
        name: quantity
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Order
      tags:
      - ORDER
  /order/all:
    get:
      consumes:
      - application/json
      description: This api logs order in
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/genproto.Orders'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get all Orders
      tags:
      - ORDER
  /order/create:
    post:
      consumes:
      - application/json
      description: This api create order
      parameters:
      - description: Void
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/genproto.Order'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Order
      tags:
      - ORDER
  /payment/{id}:
    get:
      consumes:
      - application/json
      description: This api gets payment
      parameters:
      - description: PaymentCreate
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/genproto.Payment'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Gets Payment
      tags:
      - PAYMENT
  /payment/all:
    get:
      consumes:
      - application/json
      description: This api gets all payments
      parameters:
      - description: PaymentMethod
        in: query
        name: payment_method
        type: string
      - description: AmountFrom
        in: query
        name: amount_from
        type: string
      - description: AmountTo
        in: query
        name: amount_to
        type: string
      - description: PaymentStatus
        in: query
        name: payment_status
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/genproto.Payment'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Gets all Payments
      tags:
      - PAYMENT
  /payment/create:
    post:
      consumes:
      - application/json
      description: This api creates payment
      parameters:
      - description: PaymentCreate
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/genproto.PaymentCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/genproto.Payment'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Creates Payment
      tags:
      - PAYMENT
  /payment/update:
    put:
      consumes:
      - application/json
      description: This api updates payment
      parameters:
      - description: PaymentCreate
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/genproto.PaymentCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/genproto.Payment'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Updates Payment
      tags:
      - PAYMENT
  /reservation/{id}:
    get:
      consumes:
      - application/json
      description: This api GETS reservation by id
      parameters:
      - description: RESERVATION ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/genproto.Reservation'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET RESERVATION
      tags:
      - RESERVATION
  /reservation/{id}/add-order:
    post:
      consumes:
      - application/json
      description: This api DELETES reservation by id
      parameters:
      - description: RESERVATION ID
        in: path
        name: id
        required: true
        type: string
      - description: order data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/genproto.ReservationOrder'
      produces:
      - application/json
      responses:
        "200":
          description: order created successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: ADDS ORDER TO RESERVATION
      tags:
      - RESERVATION
  /reservation/{id}/check:
    post:
      consumes:
      - application/json
      description: This api CHECKS IF THE IT IS AVAILABLE FOR RESERVATION
      parameters:
      - description: RESERVATION Check
        in: body
        name: DATA
        required: true
        schema:
          $ref: '#/definitions/genproto.ResrvationTime'
      produces:
      - application/json
      responses:
        "200":
          description: this reservation time is not reserved yet!
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: CHECKS IF THE IT IS AVAILABLE FOR RESERVATION
      tags:
      - RESERVATION
  /reservation/{id}/payment:
    post:
      consumes:
      - application/json
      description: This api PAYS for reservation
      parameters:
      - description: RESERVATION ID
        in: path
        name: id
        required: true
        type: string
      - description: PAYMENT data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/genproto.ReservationPayment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/genproto.Payment'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: PAYS FOR RESERVATION
      tags:
      - RESERVATION
  /reservation/all:
    get:
      consumes:
      - application/json
      description: This api GETS ALL reservation by id
      parameters:
      - description: RESTAURANT ID
        in: query
        name: rest_id
        type: string
      - description: ReservationFrom
        in: query
        name: time_from
        type: string
      - description: ReservationTo
        in: query
        name: time_to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/genproto.Reservation'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GETS ALL RESERVATION
      tags:
      - RESERVATION
  /reservation/create:
    post:
      consumes:
      - application/json
      description: This api create reservation
      parameters:
      - description: ReservationCreate
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/genproto.ReservationCreate'
      produces:
      - application/json
      responses:
        "201":
          description: reservation created successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Reservation
      tags:
      - RESERVATION
  /reservation/total/{id}:
    get:
      consumes:
      - application/json
      description: This api GETS TOTAL PAYCHECK FOR reservation by id
      parameters:
      - description: RESERVATION ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/genproto.Total'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET TOTAL SUM FOR  RESERVATION
      tags:
      - RESERVATION
  /restaurant/{id}:
    get:
      consumes:
      - application/json
      description: This api GETS restaurant by id
      parameters:
      - description: RESTAURANT ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/genproto.Restaurant'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      - BearerAuth: []
      summary: GET RESTAURANT
      tags:
      - RESTAURANT
  /restaurant/all:
    get:
      consumes:
      - application/json
      description: This api logs restaurant in
      parameters:
      - description: RESTAURANT Address
        in: query
        name: address
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/genproto.Restaurants'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get all Restaurants
      tags:
      - RESTAURANT
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
